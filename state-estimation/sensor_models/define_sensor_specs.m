test_accel_params = accelparams('MeasurementRange',392, ...
                                 'ConstantBias',[0 0 0], ...
                                 'NoiseDensity',[800e-6 700e-6 750e-6], ...
                                 'BiasInstability',[125.0e-4 125.0e-4 134.0e-4]);

test_gyro_params = gyroparams('MeasurementRange',deg2rad(2000), ...
                                'ConstantBias',deg2rad([0 0 0]), ...
                                'NoiseDensity',deg2rad([6.1e-3 6.1e-3 7e-3]), ...
                                'BiasInstability',10*deg2rad([7.5 8.1 4.9])*(1/3600), ...
                                'AccelerationBias',deg2rad([7.5 8.1 4.9])*(1/3600));

test_mag_params = magparams('MeasurementRange',G2microT(16), ...
                           'ConstantBias',[0 0 0]);

ADIS16500_accel_params = accelparams('MeasurementRange',392, ...
                                     'ConstantBias',[58.8e-3 58.8e-3 58.8e-3], ...
                                     'NoiseDensity',[880e-6 880e-6 732e-6], ...
                                     'BiasInstability',[125.0e-6 125.0e-6 134.0e-6]);

ADIS_16500_gyro_params = gyroparams('MeasurementRange',deg2rad(2000), ...
                                    'ConstantBias',deg2rad([0.14 1.4 0.14]), ...
                                    'NoiseDensity',deg2rad([6.1e-3 6.1e-3 7e-3]), ...
                                    'BiasInstability',deg2rad([7.5 8.1 4.9])*(1/3600), ...
                                    'AccelerationBias',deg2rad([0.572e-3 1.02e-3 0.408e-3]));

LIS3MDL_params = magparams('MeasurementRange',G2microT(16), ...
                           'ConstantBias',[0 0 0]);

IMU = imuSensor('IMUType','accel-gyro-mag', ...
                'SampleRate',100, ...
                'MagneticField',[27.5550 -2.4169 -16.0849], ... % at lat long alt 0
                'Accelerometer',test_accel_params, ...
                'Gyroscope',test_gyro_params, ...
                'Magnetometer',test_mag_params, ...
                'RandomStream','Global stream', ...
                'Seed',67);

GPS = gpsSensor('SampleRate',1, ...
                'ReferenceLocation',[0 0 0], ...
                'PositionInputFormat','Local', ...
                'HorizontalPositionAccuracy',0.1, ...
                'VerticalPositionAccuracy',0.1);

function microT_value = G2microT(gauss_value)
    microT_value = gauss_value * 100;
end